{"ast":null,"code":"import { GET_BREEDS, GET_BREED_DETAIL, SEARCH_BREED, TEMPERAMENT_FILTER // ORDER_ASC,\n// ORDER_DESC,\n// SET_BREEDS,\n} from \"./Actions\";\nconst initialState = {\n  filteredBreeds: [],\n  breeds: [],\n  breedDetail: {}\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_BREEDS) {\n    if (!state.breeds.length) {\n      return { ...state,\n        breeds: action.payload\n      };\n    }\n  }\n\n  if (action.type === GET_BREED_DETAIL) {\n    return { ...state,\n      breedDetail: action.payload\n    };\n  }\n\n  if (action.type === SEARCH_BREED) {\n    return { ...state,\n      f: action.payload\n    };\n  }\n\n  if (action.type === TEMPERAMENT_FILTER) {\n    let n = [];\n\n    for (let i = 0; i < state.breeds.length; i++) {\n      let a = state.breeds[i].temperaments.filter(e => e.name === action.payload);\n\n      if (a.length) {\n        n.push(state.breeds[i]);\n      }\n    }\n\n    return { ...state,\n      filteredBreeds: n\n    };\n  } // if (action.type === SET_FILTERED) {\n  //   return {\n  //     ...state,\n  //     filteredBreeds: action.payload,\n  //   };\n  // }\n  // if (action.type === SET_LOADING) {\n  //   return {\n  //     ...state,\n  //     loading: action.payload,\n  //   };\n  // }\n  // if (action.type === ORDER_ASC) {\n  //   if (action.payload === \"name\") {\n  //     return {\n  //       ...state,\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) =>\n  //         a[action.payload].toLowerCase() > b[action.payload].toLowerCase()\n  //           ? 1\n  //           : -1\n  //       ),\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) =>\n  //         a[action.payload].toLowerCase() > b[action.payload].toLowerCase()\n  //           ? 1\n  //           : -1\n  //       ),\n  //     };\n  //   } else {\n  //     return {\n  //       ...state,\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) => {\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\n  //         return promA > promB ? 1 : -1;\n  //       }),\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) => {\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\n  //         return promA > promB ? 1 : -1;\n  //       }),\n  //     };\n  //   }\n  // }\n  // if (action.type === ORDER_DESC) {\n  //   if (action.payload === \"name\") {\n  //     return {\n  //       ...state,\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) =>\n  //         a[action.payload].toLowerCase() < b[action.payload].toLowerCase()\n  //           ? 1\n  //           : -1\n  //       ),\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) =>\n  //         a[action.payload].toLowerCase() < b[action.payload].toLowerCase()\n  //           ? 1\n  //           : -1\n  //       ),\n  //     };\n  //   } else {\n  //     return {\n  //       ...state,\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) => {\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\n  //         return promA > promB ? -1 : 1;\n  //       }),\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) => {\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\n  //         return promA > promB ? -1 : 1;\n  //       }),\n  //     };\n  //   }\n  // }\n  // if (action.type === SET_BREEDS) {\n  //   let filter = state.filteredBreeds;\n  //   let breeds = state.breedsLoaded;\n  //   if (action.payload === \"creada\") {\n  //     filter = filter.length > 0 ? filter.filter((b) => b.id >= 265) : [];\n  //     breeds = breeds.length > 0 ? breeds.filter((b) => b.id >= 265) : [];\n  //   } else if (action.payload === \"API\") {\n  //     filter = filter.length > 0 ? filter.filter((b) => b.id < 265) : [];\n  //     breeds = breeds.length > 0 ? breeds.filter((b) => b.id < 265) : [];\n  //   }\n  //   return {\n  //     ...state,\n  //     breedsLoaded: breeds,\n  //     filteredBreeds: filter,\n  //   };\n  // }\n\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"names":["GET_BREEDS","GET_BREED_DETAIL","SEARCH_BREED","TEMPERAMENT_FILTER","initialState","filteredBreeds","breeds","breedDetail","rootReducer","state","action","type","length","payload","f","n","i","a","temperaments","filter","e","name","push"],"sources":["C:/Users/50256/Desktop/PI-Dogs-main/client/src/Redux/Reducers.js"],"sourcesContent":["import {\r\n  GET_BREEDS,\r\n  GET_BREED_DETAIL,\r\n  SEARCH_BREED,\r\n  TEMPERAMENT_FILTER,\r\n  // ORDER_ASC,\r\n  // ORDER_DESC,\r\n  // SET_BREEDS,\r\n} from \"./Actions\";\r\n\r\nconst initialState = {\r\n  filteredBreeds: [],\r\n  breeds: [],\r\n  breedDetail: {},\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === GET_BREEDS) {\r\n    if (!state.breeds.length) {\r\n      return {\r\n        ...state,\r\n        breeds: action.payload,\r\n      };\r\n    }\r\n  }\r\n  if (action.type === GET_BREED_DETAIL) {\r\n    return {\r\n      ...state,\r\n      breedDetail: action.payload,\r\n    };\r\n  }\r\n\r\n  if (action.type === SEARCH_BREED) {\r\n    return {\r\n      ...state,\r\n      f: action.payload,\r\n    };\r\n  }\r\n\r\n  if (action.type === TEMPERAMENT_FILTER) {\r\n    let n = [];\r\n    for (let i = 0; i < state.breeds.length; i++) {\r\n      let a = state.breeds[i].temperaments.filter((e) => e.name === action.payload);\r\n      if (a.length) {\r\n        n.push(state.breeds[i]);\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      filteredBreeds: n\r\n    };\r\n  }\r\n  // if (action.type === SET_FILTERED) {\r\n  //   return {\r\n  //     ...state,\r\n  //     filteredBreeds: action.payload,\r\n  //   };\r\n  // }\r\n  // if (action.type === SET_LOADING) {\r\n  //   return {\r\n  //     ...state,\r\n  //     loading: action.payload,\r\n  //   };\r\n  // }\r\n  // if (action.type === ORDER_ASC) {\r\n  //   if (action.payload === \"name\") {\r\n  //     return {\r\n  //       ...state,\r\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) =>\r\n  //         a[action.payload].toLowerCase() > b[action.payload].toLowerCase()\r\n  //           ? 1\r\n  //           : -1\r\n  //       ),\r\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) =>\r\n  //         a[action.payload].toLowerCase() > b[action.payload].toLowerCase()\r\n  //           ? 1\r\n  //           : -1\r\n  //       ),\r\n  //     };\r\n  //   } else {\r\n  //     return {\r\n  //       ...state,\r\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) => {\r\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n\r\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\r\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\r\n\r\n  //         return promA > promB ? 1 : -1;\r\n  //       }),\r\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) => {\r\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n\r\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\r\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\r\n\r\n  //         return promA > promB ? 1 : -1;\r\n  //       }),\r\n  //     };\r\n  //   }\r\n  // }\r\n  // if (action.type === ORDER_DESC) {\r\n  //   if (action.payload === \"name\") {\r\n  //     return {\r\n  //       ...state,\r\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) =>\r\n  //         a[action.payload].toLowerCase() < b[action.payload].toLowerCase()\r\n  //           ? 1\r\n  //           : -1\r\n  //       ),\r\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) =>\r\n  //         a[action.payload].toLowerCase() < b[action.payload].toLowerCase()\r\n  //           ? 1\r\n  //           : -1\r\n  //       ),\r\n  //     };\r\n  //   } else {\r\n  //     return {\r\n  //       ...state,\r\n  //       filteredBreeds: [...state.filteredBreeds].sort((a, b) => {\r\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n\r\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\r\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\r\n\r\n  //         return promA > promB ? -1 : 1;\r\n  //       }),\r\n  //       breedsLoaded: [...state.breedsLoaded].sort((a, b) => {\r\n  //         const arrayA = a[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n  //         const arrayB = b[action.payload].split(\" - \"); // [\"2\", \"4\"]\r\n\r\n  //         const promA = (+arrayA[0] + +arrayA[1] ? +arrayA[1] : 0) / 2; // 5\r\n  //         const promB = (+arrayB[0] + +arrayB[1] ? +arrayB[1] : 0) / 2; // 10\r\n\r\n  //         return promA > promB ? -1 : 1;\r\n  //       }),\r\n  //     };\r\n  //   }\r\n  // }\r\n  // if (action.type === SET_BREEDS) {\r\n  //   let filter = state.filteredBreeds;\r\n  //   let breeds = state.breedsLoaded;\r\n\r\n  //   if (action.payload === \"creada\") {\r\n  //     filter = filter.length > 0 ? filter.filter((b) => b.id >= 265) : [];\r\n  //     breeds = breeds.length > 0 ? breeds.filter((b) => b.id >= 265) : [];\r\n  //   } else if (action.payload === \"API\") {\r\n  //     filter = filter.length > 0 ? filter.filter((b) => b.id < 265) : [];\r\n  //     breeds = breeds.length > 0 ? breeds.filter((b) => b.id < 265) : [];\r\n  //   }\r\n  //   return {\r\n  //     ...state,\r\n  //     breedsLoaded: breeds,\r\n  //     filteredBreeds: filter,\r\n  //   };\r\n  // }\r\n  return state;\r\n}\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SACEA,UADF,EAEEC,gBAFF,EAGEC,YAHF,EAIEC,kBAJF,CAKE;AACA;AACA;AAPF,OAQO,WARP;AAUA,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE,EADG;EAEnBC,MAAM,EAAE,EAFW;EAGnBC,WAAW,EAAE;AAHM,CAArB;;AAMA,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBL,YAAsB;EAAA,IAARM,MAAQ;;EACjD,IAAIA,MAAM,CAACC,IAAP,KAAgBX,UAApB,EAAgC;IAC9B,IAAI,CAACS,KAAK,CAACH,MAAN,CAAaM,MAAlB,EAA0B;MACxB,OAAO,EACL,GAAGH,KADE;QAELH,MAAM,EAAEI,MAAM,CAACG;MAFV,CAAP;IAID;EACF;;EACD,IAAIH,MAAM,CAACC,IAAP,KAAgBV,gBAApB,EAAsC;IACpC,OAAO,EACL,GAAGQ,KADE;MAELF,WAAW,EAAEG,MAAM,CAACG;IAFf,CAAP;EAID;;EAED,IAAIH,MAAM,CAACC,IAAP,KAAgBT,YAApB,EAAkC;IAChC,OAAO,EACL,GAAGO,KADE;MAELK,CAAC,EAAEJ,MAAM,CAACG;IAFL,CAAP;EAID;;EAED,IAAIH,MAAM,CAACC,IAAP,KAAgBR,kBAApB,EAAwC;IACtC,IAAIY,CAAC,GAAG,EAAR;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACH,MAAN,CAAaM,MAAjC,EAAyCI,CAAC,EAA1C,EAA8C;MAC5C,IAAIC,CAAC,GAAGR,KAAK,CAACH,MAAN,CAAaU,CAAb,EAAgBE,YAAhB,CAA6BC,MAA7B,CAAqCC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWX,MAAM,CAACG,OAA7D,CAAR;;MACA,IAAII,CAAC,CAACL,MAAN,EAAc;QACZG,CAAC,CAACO,IAAF,CAAOb,KAAK,CAACH,MAAN,CAAaU,CAAb,CAAP;MACD;IACF;;IAED,OAAO,EACL,GAAGP,KADE;MAELJ,cAAc,EAAEU;IAFX,CAAP;EAID,CApCgD,CAqCjeAAeD,WAAf"},"metadata":{},"sourceType":"module"}