{"ast":null,"code":"let validate = (e, Breed) => {\n  let errors = {};\n\n  if (e.target.name === \"max_height\") {\n    if (parseInt(e.target.value) <= parseInt(Breed.min_height)) {\n      errors.max_height = 'The Max value should be highter than Min value';\n      errors.disable = \"disabled\";\n    }\n  }\n\n  if (e.target.name === \"max_weight\") {\n    if (parseInt(e.target.value) <= parseInt(Breed.min_weight)) {\n      errors.max_weight = \"The Max value should be highter than Min value\";\n      errors.disable = \"disabled\";\n    }\n  }\n\n  if (e.target.name === \"img\") {\n    var pattern = new RegExp(\"^(https?:\\\\/\\\\/)?\" + // protocol\n    \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|\" + // domain name\n    \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n    \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n    \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n    \"(\\\\#[-a-z\\\\d_]*)?$\", \"i\"); // fragment locator\n\n    if (pattern.test(e.target.value)) {}\n  }\n\n  return errors;\n};\n\nexport default validate;","map":{"version":3,"names":["validate","e","Breed","errors","target","name","parseInt","value","min_height","max_height","disable","min_weight","max_weight","pattern","RegExp","test"],"sources":["C:/Users/50256/Desktop/PI-Dogs-main/client/src/validate.js"],"sourcesContent":["let validate = (e, Breed) => {\r\n  let errors = {};\r\n  if (e.target.name === \"max_height\") {\r\n    if(parseInt(e.target.value) <= parseInt(Breed.min_height)){\r\n      errors.max_height = 'The Max value should be highter than Min value'\r\n      errors.disable = \"disabled\";\r\n    }\r\n  }\r\n  if (e.target.name === \"max_weight\") {\r\n    if (parseInt(e.target.value) <= parseInt(Breed.min_weight)) {\r\n      errors.max_weight = \"The Max value should be highter than Min value\";\r\n      errors.disable = \"disabled\";\r\n    }\r\n  }\r\n\r\n  if (e.target.name === \"img\") {\r\n    var pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n        \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|\" + // domain name\r\n        \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n        \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n        \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    if(pattern.test(e.target.value)){\r\n      \r\n    }\r\n  }\r\n\r\n  return errors\r\n};\r\nexport default validate;\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;EAC3B,IAAIC,MAAM,GAAG,EAAb;;EACA,IAAIF,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;IAClC,IAAGC,QAAQ,CAACL,CAAC,CAACG,MAAF,CAASG,KAAV,CAAR,IAA4BD,QAAQ,CAACJ,KAAK,CAACM,UAAP,CAAvC,EAA0D;MACxDL,MAAM,CAACM,UAAP,GAAoB,gDAApB;MACAN,MAAM,CAACO,OAAP,GAAiB,UAAjB;IACD;EACF;;EACD,IAAIT,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;IAClC,IAAIC,QAAQ,CAACL,CAAC,CAACG,MAAF,CAASG,KAAV,CAAR,IAA4BD,QAAQ,CAACJ,KAAK,CAACS,UAAP,CAAxC,EAA4D;MAC1DR,MAAM,CAACS,UAAP,GAAoB,gDAApB;MACAT,MAAM,CAACO,OAAP,GAAiB,UAAjB;IACD;EACF;;EAED,IAAIT,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,KAAtB,EAA6B;IAC3B,IAAIQ,OAAO,GAAG,IAAIC,MAAJ,CACZ,sBAAsB;IACpB,mDADF,GACwD;IACtD,6BAFF,GAEkC;IAChC,iCAHF,GAGsC;IACpC,0BAJF,GAI+B;IAC7B,oBANU,EAOZ,GAPY,CAAd,CAD2B,CASxB;;IACH,IAAGD,OAAO,CAACE,IAAR,CAAad,CAAC,CAACG,MAAF,CAASG,KAAtB,CAAH,EAAgC,CAE/B;EACF;;EAED,OAAOJ,MAAP;AACD,CA/BD;;AAgCA,eAAeH,QAAf"},"metadata":{},"sourceType":"module"}